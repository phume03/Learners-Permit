package com.wordpress.phumelelathedesigner.learnerspermit;

import android.os.Bundle;
import androidx.fragment.app.Fragment;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ExpandableListView;
import android.widget.SimpleExpandableListAdapter;
import android.widget.TextView;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

public class RulesOfTheRoad extends Fragment {
    private ExpandableListView listOfRules;
    private List<Map<String, String>> questions;
    private String [] question_keys;
    private int [] question_views;
    private List<List<Map<String, String>>> answers;
    private String [] answer_keys;
    private int [] answer_views;
    private static final String Log_Tag = RulesOfTheRoad.class.getSimpleName();

    public RulesOfTheRoad() {
        // Required empty public constructor
    }

    public static RulesOfTheRoad newInstance() {
        RulesOfTheRoad fragment = new RulesOfTheRoad();
        return fragment;
    }

    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        Log.i(Log_Tag, "Displaying rules of the road list.");
        questions = new ArrayList<Map<String, String>>();
        answers = new ArrayList<List<Map<String, String>>>();

        Map<String, String> QuestionEntry = new HashMap<String, String>();
        QuestionEntry.put(Log_Tag, getString(R.string.rules_of_the_road_01_Q));
        questions.add(QuestionEntry);
        Map<String, String> AnswerEntry = new HashMap<String, String>();
        AnswerEntry.put(Log_Tag, getString(R.string.rules_of_the_road_01_A));
        List<Map<String, String>> QuestionAnswerEntry = new ArrayList<>();
        QuestionAnswerEntry.add(AnswerEntry);
        answers.add(QuestionAnswerEntry);
        QuestionEntry = new HashMap<String, String>();
        QuestionEntry.put(Log_Tag, getString(R.string.rules_of_the_road_02_Q));
        questions.add(QuestionEntry);
        AnswerEntry = new HashMap<String, String>();
        AnswerEntry.put(Log_Tag, getString(R.string.rules_of_the_road_02_A));
        QuestionAnswerEntry = new ArrayList<>();
        QuestionAnswerEntry.add(AnswerEntry);
        answers.add(QuestionAnswerEntry);
        QuestionEntry = new HashMap<String, String>();
        QuestionEntry.put(Log_Tag, getString(R.string.rules_of_the_road_03_Q));
        questions.add(QuestionEntry);
        AnswerEntry = new HashMap<String, String>();
        AnswerEntry.put(Log_Tag, getString(R.string.rules_of_the_road_03_A));
        QuestionAnswerEntry = new ArrayList<>();
        QuestionAnswerEntry.add(AnswerEntry);
        answers.add(QuestionAnswerEntry);
        QuestionEntry = new HashMap<String, String>();
        QuestionEntry.put(Log_Tag, getString(R.string.rules_of_the_road_04_Q));
        questions.add(QuestionEntry);
        AnswerEntry = new HashMap<String, String>();
        AnswerEntry.put(Log_Tag, getString(R.string.rules_of_the_road_04_A));
        QuestionAnswerEntry = new ArrayList<>();
        QuestionAnswerEntry.add(AnswerEntry);
        answers.add(QuestionAnswerEntry);
        QuestionEntry = new HashMap<String, String>();
        QuestionEntry.put(Log_Tag, getString(R.string.rules_of_the_road_05_Q));
        questions.add(QuestionEntry);
        AnswerEntry = new HashMap<String, String>();
        AnswerEntry.put(Log_Tag, getString(R.string.rules_of_the_road_05_A));
        QuestionAnswerEntry = new ArrayList<>();
        QuestionAnswerEntry.add(AnswerEntry);
        answers.add(QuestionAnswerEntry);
        QuestionEntry = new HashMap<String, String>();
        QuestionEntry.put(Log_Tag, getString(R.string.rules_of_the_road_06_Q));
        questions.add(QuestionEntry);
        AnswerEntry = new HashMap<String, String>();
        AnswerEntry.put(Log_Tag, getString(R.string.rules_of_the_road_06_A));
        QuestionAnswerEntry = new ArrayList<>();
        QuestionAnswerEntry.add(AnswerEntry);
        answers.add(QuestionAnswerEntry);
        QuestionEntry = new HashMap<String, String>();
        QuestionEntry.put(Log_Tag, getString(R.string.rules_of_the_road_07_Q));
        questions.add(QuestionEntry);
        AnswerEntry = new HashMap<String, String>();
        AnswerEntry.put(Log_Tag, getString(R.string.rules_of_the_road_07_A));
        QuestionAnswerEntry = new ArrayList<>();
        QuestionAnswerEntry.add(AnswerEntry);
        answers.add(QuestionAnswerEntry);
        QuestionEntry = new HashMap<String, String>();
        QuestionEntry.put(Log_Tag, getString(R.string.rules_of_the_road_08_Q));
        questions.add(QuestionEntry);
        AnswerEntry = new HashMap<String, String>();
        AnswerEntry.put(Log_Tag, getString(R.string.rules_of_the_road_08_A));
        QuestionAnswerEntry = new ArrayList<>();
        QuestionAnswerEntry.add(AnswerEntry);
        answers.add(QuestionAnswerEntry);
        QuestionEntry = new HashMap<String, String>();
        QuestionEntry.put(Log_Tag, getString(R.string.rules_of_the_road_09_Q));
        questions.add(QuestionEntry);
        AnswerEntry = new HashMap<String, String>();
        AnswerEntry.put(Log_Tag, getString(R.string.rules_of_the_road_09_A));
        QuestionAnswerEntry = new ArrayList<>();
        QuestionAnswerEntry.add(AnswerEntry);
        answers.add(QuestionAnswerEntry);
        QuestionEntry = new HashMap<String, String>();
        QuestionEntry.put(Log_Tag, getString(R.string.rules_of_the_road_10_Q));
        questions.add(QuestionEntry);
        AnswerEntry = new HashMap<String, String>();
        AnswerEntry.put(Log_Tag, getString(R.string.rules_of_the_road_10_A));
        QuestionAnswerEntry = new ArrayList<>();
        QuestionAnswerEntry.add(AnswerEntry);
        answers.add(QuestionAnswerEntry);

        QuestionEntry = new HashMap<String, String>();
        QuestionEntry.put(Log_Tag, getString(R.string.rules_of_the_road_11_Q));
        questions.add(QuestionEntry);
        AnswerEntry = new HashMap<String, String>();
        AnswerEntry.put(Log_Tag, getString(R.string.rules_of_the_road_11_A));
        QuestionAnswerEntry = new ArrayList<>();
        QuestionAnswerEntry.add(AnswerEntry);
        answers.add(QuestionAnswerEntry);
        QuestionEntry = new HashMap<String, String>();
        QuestionEntry.put(Log_Tag, getString(R.string.rules_of_the_road_12_Q));
        questions.add(QuestionEntry);
        AnswerEntry = new HashMap<String, String>();
        AnswerEntry.put(Log_Tag, getString(R.string.rules_of_the_road_12_A));
        QuestionAnswerEntry = new ArrayList<>();
        QuestionAnswerEntry.add(AnswerEntry);
        answers.add(QuestionAnswerEntry);
        QuestionEntry = new HashMap<String, String>();
        QuestionEntry.put(Log_Tag, getString(R.string.rules_of_the_road_13_Q));
        questions.add(QuestionEntry);
        AnswerEntry = new HashMap<String, String>();
        AnswerEntry.put(Log_Tag, getString(R.string.rules_of_the_road_13_A));
        QuestionAnswerEntry = new ArrayList<>();
        QuestionAnswerEntry.add(AnswerEntry);
        answers.add(QuestionAnswerEntry);
        QuestionEntry = new HashMap<String, String>();
        QuestionEntry.put(Log_Tag, getString(R.string.rules_of_the_road_14_Q));
        questions.add(QuestionEntry);
        AnswerEntry = new HashMap<String, String>();
        AnswerEntry.put(Log_Tag, getString(R.string.rules_of_the_road_14_A));
        QuestionAnswerEntry = new ArrayList<>();
        QuestionAnswerEntry.add(AnswerEntry);
        answers.add(QuestionAnswerEntry);
        QuestionEntry = new HashMap<String, String>();
        QuestionEntry.put(Log_Tag, getString(R.string.rules_of_the_road_15_Q));
        questions.add(QuestionEntry);
        AnswerEntry = new HashMap<String, String>();
        AnswerEntry.put(Log_Tag, getString(R.string.rules_of_the_road_15_A));
        QuestionAnswerEntry = new ArrayList<>();
        QuestionAnswerEntry.add(AnswerEntry);
        answers.add(QuestionAnswerEntry);
        QuestionEntry = new HashMap<String, String>();
        QuestionEntry.put(Log_Tag, getString(R.string.rules_of_the_road_16_Q));
        questions.add(QuestionEntry);
        AnswerEntry = new HashMap<String, String>();
        AnswerEntry.put(Log_Tag, getString(R.string.rules_of_the_road_16_A));
        QuestionAnswerEntry = new ArrayList<>();
        QuestionAnswerEntry.add(AnswerEntry);
        answers.add(QuestionAnswerEntry);
        QuestionEntry = new HashMap<String, String>();
        QuestionEntry.put(Log_Tag, getString(R.string.rules_of_the_road_17_Q));
        questions.add(QuestionEntry);
        AnswerEntry = new HashMap<String, String>();
        AnswerEntry.put(Log_Tag, getString(R.string.rules_of_the_road_17_A));
        QuestionAnswerEntry = new ArrayList<>();
        QuestionAnswerEntry.add(AnswerEntry);
        answers.add(QuestionAnswerEntry);
        QuestionEntry = new HashMap<String, String>();
        QuestionEntry.put(Log_Tag, getString(R.string.rules_of_the_road_18_Q));
        questions.add(QuestionEntry);
        AnswerEntry = new HashMap<String, String>();
        AnswerEntry.put(Log_Tag, getString(R.string.rules_of_the_road_18_A));
        QuestionAnswerEntry = new ArrayList<>();
        QuestionAnswerEntry.add(AnswerEntry);
        answers.add(QuestionAnswerEntry);
        QuestionEntry = new HashMap<String, String>();
        QuestionEntry.put(Log_Tag, getString(R.string.rules_of_the_road_19_Q));
        questions.add(QuestionEntry);
        AnswerEntry = new HashMap<String, String>();
        AnswerEntry.put(Log_Tag, getString(R.string.rules_of_the_road_19_A));
        QuestionAnswerEntry = new ArrayList<>();
        QuestionAnswerEntry.add(AnswerEntry);
        answers.add(QuestionAnswerEntry);
        QuestionEntry = new HashMap<String, String>();
        QuestionEntry.put(Log_Tag, getString(R.string.rules_of_the_road_20_Q));
        questions.add(QuestionEntry);
        AnswerEntry = new HashMap<String, String>();
        AnswerEntry.put(Log_Tag, getString(R.string.rules_of_the_road_20_A));
        QuestionAnswerEntry = new ArrayList<>();
        QuestionAnswerEntry.add(AnswerEntry);
        answers.add(QuestionAnswerEntry);

        QuestionEntry = new HashMap<String, String>();
        QuestionEntry.put(Log_Tag, getString(R.string.rules_of_the_road_21_Q));
        questions.add(QuestionEntry);
        AnswerEntry = new HashMap<String, String>();
        AnswerEntry.put(Log_Tag, getString(R.string.rules_of_the_road_21_A));
        QuestionAnswerEntry = new ArrayList<>();
        QuestionAnswerEntry.add(AnswerEntry);
        answers.add(QuestionAnswerEntry);
        QuestionEntry = new HashMap<String, String>();
        QuestionEntry.put(Log_Tag, getString(R.string.rules_of_the_road_22_Q));
        questions.add(QuestionEntry);
        AnswerEntry = new HashMap<String, String>();
        AnswerEntry.put(Log_Tag, getString(R.string.rules_of_the_road_22_A));
        QuestionAnswerEntry = new ArrayList<>();
        QuestionAnswerEntry.add(AnswerEntry);
        answers.add(QuestionAnswerEntry);
        QuestionEntry = new HashMap<String, String>();
        QuestionEntry.put(Log_Tag, getString(R.string.rules_of_the_road_23_Q));
        questions.add(QuestionEntry);
        AnswerEntry = new HashMap<String, String>();
        AnswerEntry.put(Log_Tag, getString(R.string.rules_of_the_road_23_A));
        QuestionAnswerEntry = new ArrayList<>();
        QuestionAnswerEntry.add(AnswerEntry);
        answers.add(QuestionAnswerEntry);
        QuestionEntry = new HashMap<String, String>();
        QuestionEntry.put(Log_Tag, getString(R.string.rules_of_the_road_24_Q));
        questions.add(QuestionEntry);
        AnswerEntry = new HashMap<String, String>();
        AnswerEntry.put(Log_Tag, getString(R.string.rules_of_the_road_24_A));
        QuestionAnswerEntry = new ArrayList<>();
        QuestionAnswerEntry.add(AnswerEntry);
        answers.add(QuestionAnswerEntry);
        QuestionEntry = new HashMap<String, String>();
        QuestionEntry.put(Log_Tag, getString(R.string.rules_of_the_road_25_Q));
        questions.add(QuestionEntry);
        AnswerEntry = new HashMap<String, String>();
        AnswerEntry.put(Log_Tag, getString(R.string.rules_of_the_road_25_A));
        QuestionAnswerEntry = new ArrayList<>();
        QuestionAnswerEntry.add(AnswerEntry);
        answers.add(QuestionAnswerEntry);
        QuestionEntry = new HashMap<String, String>();
        QuestionEntry.put(Log_Tag, getString(R.string.rules_of_the_road_26_Q));
        questions.add(QuestionEntry);
        AnswerEntry = new HashMap<String, String>();
        AnswerEntry.put(Log_Tag, getString(R.string.rules_of_the_road_26_A));
        QuestionAnswerEntry = new ArrayList<>();
        QuestionAnswerEntry.add(AnswerEntry);
        answers.add(QuestionAnswerEntry);
        QuestionEntry = new HashMap<String, String>();
        QuestionEntry.put(Log_Tag, getString(R.string.rules_of_the_road_27_Q));
        questions.add(QuestionEntry);
        AnswerEntry = new HashMap<String, String>();
        AnswerEntry.put(Log_Tag, getString(R.string.rules_of_the_road_27_A));
        QuestionAnswerEntry = new ArrayList<>();
        QuestionAnswerEntry.add(AnswerEntry);
        answers.add(QuestionAnswerEntry);
        QuestionEntry = new HashMap<String, String>();
        QuestionEntry.put(Log_Tag, getString(R.string.rules_of_the_road_28_Q));
        questions.add(QuestionEntry);
        AnswerEntry = new HashMap<String, String>();
        AnswerEntry.put(Log_Tag, getString(R.string.rules_of_the_road_28_A));
        QuestionAnswerEntry = new ArrayList<>();
        QuestionAnswerEntry.add(AnswerEntry);
        answers.add(QuestionAnswerEntry);
        QuestionEntry = new HashMap<String, String>();
        QuestionEntry.put(Log_Tag, getString(R.string.rules_of_the_road_29_Q));
        questions.add(QuestionEntry);
        AnswerEntry = new HashMap<String, String>();
        AnswerEntry.put(Log_Tag, getString(R.string.rules_of_the_road_29_A));
        QuestionAnswerEntry = new ArrayList<>();
        QuestionAnswerEntry.add(AnswerEntry);
        answers.add(QuestionAnswerEntry);
        QuestionEntry = new HashMap<String, String>();
        QuestionEntry.put(Log_Tag, getString(R.string.rules_of_the_road_30_Q));
        questions.add(QuestionEntry);
        AnswerEntry = new HashMap<String, String>();
        AnswerEntry.put(Log_Tag, getString(R.string.rules_of_the_road_30_A));
        QuestionAnswerEntry = new ArrayList<>();
        QuestionAnswerEntry.add(AnswerEntry);
        answers.add(QuestionAnswerEntry);

        QuestionEntry = new HashMap<String, String>();
        QuestionEntry.put(Log_Tag, getString(R.string.rules_of_the_road_31_Q));
        questions.add(QuestionEntry);
        AnswerEntry = new HashMap<String, String>();
        AnswerEntry.put(Log_Tag, getString(R.string.rules_of_the_road_31_A));
        QuestionAnswerEntry = new ArrayList<>();
        QuestionAnswerEntry.add(AnswerEntry);
        answers.add(QuestionAnswerEntry);
        QuestionEntry = new HashMap<String, String>();
        QuestionEntry.put(Log_Tag, getString(R.string.rules_of_the_road_32_Q));
        questions.add(QuestionEntry);
        AnswerEntry = new HashMap<String, String>();
        AnswerEntry.put(Log_Tag, getString(R.string.rules_of_the_road_32_A));
        QuestionAnswerEntry = new ArrayList<>();
        QuestionAnswerEntry.add(AnswerEntry);
        answers.add(QuestionAnswerEntry);
        QuestionEntry = new HashMap<String, String>();
        QuestionEntry.put(Log_Tag, getString(R.string.rules_of_the_road_33_Q));
        questions.add(QuestionEntry);
        AnswerEntry = new HashMap<String, String>();
        AnswerEntry.put(Log_Tag, getString(R.string.rules_of_the_road_33_A));
        QuestionAnswerEntry = new ArrayList<>();
        QuestionAnswerEntry.add(AnswerEntry);
        answers.add(QuestionAnswerEntry);
        QuestionEntry = new HashMap<String, String>();
        QuestionEntry.put(Log_Tag, getString(R.string.rules_of_the_road_34_Q));
        questions.add(QuestionEntry);
        AnswerEntry = new HashMap<String, String>();
        AnswerEntry.put(Log_Tag, getString(R.string.rules_of_the_road_34_A));
        QuestionAnswerEntry = new ArrayList<>();
        QuestionAnswerEntry.add(AnswerEntry);
        answers.add(QuestionAnswerEntry);
        QuestionEntry = new HashMap<String, String>();
        QuestionEntry.put(Log_Tag, getString(R.string.rules_of_the_road_35_Q));
        questions.add(QuestionEntry);
        AnswerEntry = new HashMap<String, String>();
        AnswerEntry.put(Log_Tag, getString(R.string.rules_of_the_road_35_A));
        QuestionAnswerEntry = new ArrayList<>();
        QuestionAnswerEntry.add(AnswerEntry);
        answers.add(QuestionAnswerEntry);
        QuestionEntry = new HashMap<String, String>();
        QuestionEntry.put(Log_Tag, getString(R.string.rules_of_the_road_36_Q));
        questions.add(QuestionEntry);
        AnswerEntry = new HashMap<String, String>();
        AnswerEntry.put(Log_Tag, getString(R.string.rules_of_the_road_36_A));
        QuestionAnswerEntry = new ArrayList<>();
        QuestionAnswerEntry.add(AnswerEntry);
        answers.add(QuestionAnswerEntry);
        QuestionEntry = new HashMap<String, String>();
        QuestionEntry.put(Log_Tag, getString(R.string.rules_of_the_road_37_Q));
        questions.add(QuestionEntry);
        AnswerEntry = new HashMap<String, String>();
        AnswerEntry.put(Log_Tag, getString(R.string.rules_of_the_road_37_A));
        QuestionAnswerEntry = new ArrayList<>();
        QuestionAnswerEntry.add(AnswerEntry);
        answers.add(QuestionAnswerEntry);
        QuestionEntry = new HashMap<String, String>();
        QuestionEntry.put(Log_Tag, getString(R.string.rules_of_the_road_38_Q));
        questions.add(QuestionEntry);
        AnswerEntry = new HashMap<String, String>();
        AnswerEntry.put(Log_Tag, getString(R.string.rules_of_the_road_38_A));
        QuestionAnswerEntry = new ArrayList<>();
        QuestionAnswerEntry.add(AnswerEntry);
        answers.add(QuestionAnswerEntry);
        QuestionEntry = new HashMap<String, String>();
        QuestionEntry.put(Log_Tag, getString(R.string.rules_of_the_road_39_Q));
        questions.add(QuestionEntry);
        AnswerEntry = new HashMap<String, String>();
        AnswerEntry.put(Log_Tag, getString(R.string.rules_of_the_road_39_A));
        QuestionAnswerEntry = new ArrayList<>();
        QuestionAnswerEntry.add(AnswerEntry);
        answers.add(QuestionAnswerEntry);
        QuestionEntry = new HashMap<String, String>();
        QuestionEntry.put(Log_Tag, getString(R.string.rules_of_the_road_40_Q));
        questions.add(QuestionEntry);
        AnswerEntry = new HashMap<String, String>();
        AnswerEntry.put(Log_Tag, getString(R.string.rules_of_the_road_40_A));
        QuestionAnswerEntry = new ArrayList<>();
        QuestionAnswerEntry.add(AnswerEntry);
        answers.add(QuestionAnswerEntry);

        QuestionEntry = new HashMap<String, String>();
        QuestionEntry.put(Log_Tag, getString(R.string.rules_of_the_road_41_Q));
        questions.add(QuestionEntry);
        AnswerEntry = new HashMap<String, String>();
        AnswerEntry.put(Log_Tag, getString(R.string.rules_of_the_road_41_A));
        QuestionAnswerEntry = new ArrayList<>();
        QuestionAnswerEntry.add(AnswerEntry);
        answers.add(QuestionAnswerEntry);
        QuestionEntry = new HashMap<String, String>();
        QuestionEntry.put(Log_Tag, getString(R.string.rules_of_the_road_42_Q));
        questions.add(QuestionEntry);
        AnswerEntry = new HashMap<String, String>();
        AnswerEntry.put(Log_Tag, getString(R.string.rules_of_the_road_42_A));
        QuestionAnswerEntry = new ArrayList<>();
        QuestionAnswerEntry.add(AnswerEntry);
        answers.add(QuestionAnswerEntry);
        QuestionEntry = new HashMap<String, String>();
        QuestionEntry.put(Log_Tag, getString(R.string.rules_of_the_road_43_Q));
        questions.add(QuestionEntry);
        AnswerEntry = new HashMap<String, String>();
        AnswerEntry.put(Log_Tag, getString(R.string.rules_of_the_road_43_A));
        QuestionAnswerEntry = new ArrayList<>();
        QuestionAnswerEntry.add(AnswerEntry);
        answers.add(QuestionAnswerEntry);
        QuestionEntry = new HashMap<String, String>();
        QuestionEntry.put(Log_Tag, getString(R.string.rules_of_the_road_44_Q));
        questions.add(QuestionEntry);
        AnswerEntry = new HashMap<String, String>();
        AnswerEntry.put(Log_Tag, getString(R.string.rules_of_the_road_44_A));
        QuestionAnswerEntry = new ArrayList<>();
        QuestionAnswerEntry.add(AnswerEntry);
        answers.add(QuestionAnswerEntry);
        QuestionEntry = new HashMap<String, String>();
        QuestionEntry.put(Log_Tag, getString(R.string.rules_of_the_road_45_Q));
        questions.add(QuestionEntry);
        AnswerEntry = new HashMap<String, String>();
        AnswerEntry.put(Log_Tag, getString(R.string.rules_of_the_road_45_A));
        QuestionAnswerEntry = new ArrayList<>();
        QuestionAnswerEntry.add(AnswerEntry);
        answers.add(QuestionAnswerEntry);
        QuestionEntry = new HashMap<String, String>();
        QuestionEntry.put(Log_Tag, getString(R.string.rules_of_the_road_46_Q));
        questions.add(QuestionEntry);
        AnswerEntry = new HashMap<String, String>();
        AnswerEntry.put(Log_Tag, getString(R.string.rules_of_the_road_46_A));
        QuestionAnswerEntry = new ArrayList<>();
        QuestionAnswerEntry.add(AnswerEntry);
        answers.add(QuestionAnswerEntry);
        QuestionEntry = new HashMap<String, String>();
        QuestionEntry.put(Log_Tag, getString(R.string.rules_of_the_road_47_Q));
        questions.add(QuestionEntry);
        AnswerEntry = new HashMap<String, String>();
        AnswerEntry.put(Log_Tag, getString(R.string.rules_of_the_road_47_A));
        QuestionAnswerEntry = new ArrayList<>();
        QuestionAnswerEntry.add(AnswerEntry);
        answers.add(QuestionAnswerEntry);
        QuestionEntry = new HashMap<String, String>();
        QuestionEntry.put(Log_Tag, getString(R.string.rules_of_the_road_48_Q));
        questions.add(QuestionEntry);
        AnswerEntry = new HashMap<String, String>();
        AnswerEntry.put(Log_Tag, getString(R.string.rules_of_the_road_48_A));
        QuestionAnswerEntry = new ArrayList<>();
        QuestionAnswerEntry.add(AnswerEntry);
        answers.add(QuestionAnswerEntry);
        QuestionEntry = new HashMap<String, String>();
        QuestionEntry.put(Log_Tag, getString(R.string.rules_of_the_road_49_Q));
        questions.add(QuestionEntry);
        AnswerEntry = new HashMap<String, String>();
        AnswerEntry.put(Log_Tag, getString(R.string.rules_of_the_road_49_A));
        QuestionAnswerEntry = new ArrayList<>();
        QuestionAnswerEntry.add(AnswerEntry);
        answers.add(QuestionAnswerEntry);
        QuestionEntry = new HashMap<String, String>();
        QuestionEntry.put(Log_Tag, getString(R.string.rules_of_the_road_50_Q));
        questions.add(QuestionEntry);
        AnswerEntry = new HashMap<String, String>();
        AnswerEntry.put(Log_Tag, getString(R.string.rules_of_the_road_50_A));
        QuestionAnswerEntry = new ArrayList<>();
        QuestionAnswerEntry.add(AnswerEntry);
        answers.add(QuestionAnswerEntry);

        QuestionEntry = new HashMap<String, String>();
        QuestionEntry.put(Log_Tag, getString(R.string.rules_of_the_road_51_Q));
        questions.add(QuestionEntry);
        AnswerEntry = new HashMap<String, String>();
        AnswerEntry.put(Log_Tag, getString(R.string.rules_of_the_road_51_A));
        QuestionAnswerEntry = new ArrayList<>();
        QuestionAnswerEntry.add(AnswerEntry);
        answers.add(QuestionAnswerEntry);
        QuestionEntry = new HashMap<String, String>();
        QuestionEntry.put(Log_Tag, getString(R.string.rules_of_the_road_52_Q));
        questions.add(QuestionEntry);
        AnswerEntry = new HashMap<String, String>();
        AnswerEntry.put(Log_Tag, getString(R.string.rules_of_the_road_52_A));
        QuestionAnswerEntry = new ArrayList<>();
        QuestionAnswerEntry.add(AnswerEntry);
        answers.add(QuestionAnswerEntry);
        QuestionEntry = new HashMap<String, String>();
        QuestionEntry.put(Log_Tag, getString(R.string.rules_of_the_road_53_Q));
        questions.add(QuestionEntry);
        AnswerEntry = new HashMap<String, String>();
        AnswerEntry.put(Log_Tag, getString(R.string.rules_of_the_road_53_A));
        QuestionAnswerEntry = new ArrayList<>();
        QuestionAnswerEntry.add(AnswerEntry);
        answers.add(QuestionAnswerEntry);
        QuestionEntry = new HashMap<String, String>();
        QuestionEntry.put(Log_Tag, getString(R.string.rules_of_the_road_54_Q));
        questions.add(QuestionEntry);
        AnswerEntry = new HashMap<String, String>();
        AnswerEntry.put(Log_Tag, getString(R.string.rules_of_the_road_54_A));
        QuestionAnswerEntry = new ArrayList<>();
        QuestionAnswerEntry.add(AnswerEntry);
        answers.add(QuestionAnswerEntry);
        QuestionEntry = new HashMap<String, String>();
        QuestionEntry.put(Log_Tag, getString(R.string.rules_of_the_road_55_Q));
        questions.add(QuestionEntry);
        AnswerEntry = new HashMap<String, String>();
        AnswerEntry.put(Log_Tag, getString(R.string.rules_of_the_road_55_A));
        QuestionAnswerEntry = new ArrayList<>();
        QuestionAnswerEntry.add(AnswerEntry);
        answers.add(QuestionAnswerEntry);
        QuestionEntry = new HashMap<String, String>();
        QuestionEntry.put(Log_Tag, getString(R.string.rules_of_the_road_56_Q));
        questions.add(QuestionEntry);
        AnswerEntry = new HashMap<String, String>();
        AnswerEntry.put(Log_Tag, getString(R.string.rules_of_the_road_56_A));
        QuestionAnswerEntry = new ArrayList<>();
        QuestionAnswerEntry.add(AnswerEntry);
        answers.add(QuestionAnswerEntry);
        QuestionEntry = new HashMap<String, String>();
        QuestionEntry.put(Log_Tag, getString(R.string.rules_of_the_road_57_Q));
        questions.add(QuestionEntry);
        AnswerEntry = new HashMap<String, String>();
        AnswerEntry.put(Log_Tag, getString(R.string.rules_of_the_road_57_A));
        QuestionAnswerEntry = new ArrayList<>();
        QuestionAnswerEntry.add(AnswerEntry);
        answers.add(QuestionAnswerEntry);
        QuestionEntry = new HashMap<String, String>();
        QuestionEntry.put(Log_Tag, getString(R.string.rules_of_the_road_58_Q));
        questions.add(QuestionEntry);
        AnswerEntry = new HashMap<String, String>();
        AnswerEntry.put(Log_Tag, getString(R.string.rules_of_the_road_58_A));
        QuestionAnswerEntry = new ArrayList<>();
        QuestionAnswerEntry.add(AnswerEntry);
        answers.add(QuestionAnswerEntry);
        QuestionEntry = new HashMap<String, String>();
        QuestionEntry.put(Log_Tag, getString(R.string.rules_of_the_road_59_Q));
        questions.add(QuestionEntry);
        AnswerEntry = new HashMap<String, String>();
        AnswerEntry.put(Log_Tag, getString(R.string.rules_of_the_road_59_A));
        QuestionAnswerEntry = new ArrayList<>();
        QuestionAnswerEntry.add(AnswerEntry);
        answers.add(QuestionAnswerEntry);
        QuestionEntry = new HashMap<String, String>();
        QuestionEntry.put(Log_Tag, getString(R.string.rules_of_the_road_60_Q));
        questions.add(QuestionEntry);
        AnswerEntry = new HashMap<String, String>();
        AnswerEntry.put(Log_Tag, getString(R.string.rules_of_the_road_60_A));
        QuestionAnswerEntry = new ArrayList<>();
        QuestionAnswerEntry.add(AnswerEntry);
        answers.add(QuestionAnswerEntry);

        QuestionEntry = new HashMap<String, String>();
        QuestionEntry.put(Log_Tag, getString(R.string.rules_of_the_road_61_Q));
        questions.add(QuestionEntry);
        AnswerEntry = new HashMap<String, String>();
        AnswerEntry.put(Log_Tag, getString(R.string.rules_of_the_road_61_A));
        QuestionAnswerEntry = new ArrayList<>();
        QuestionAnswerEntry.add(AnswerEntry);
        answers.add(QuestionAnswerEntry);
        QuestionEntry = new HashMap<String, String>();
        QuestionEntry.put(Log_Tag, getString(R.string.rules_of_the_road_62_Q));
        questions.add(QuestionEntry);
        AnswerEntry = new HashMap<String, String>();
        AnswerEntry.put(Log_Tag, getString(R.string.rules_of_the_road_62_A));
        QuestionAnswerEntry = new ArrayList<>();
        QuestionAnswerEntry.add(AnswerEntry);
        answers.add(QuestionAnswerEntry);
        QuestionEntry = new HashMap<String, String>();
        QuestionEntry.put(Log_Tag, getString(R.string.rules_of_the_road_63_Q));
        questions.add(QuestionEntry);
        AnswerEntry = new HashMap<String, String>();
        AnswerEntry.put(Log_Tag, getString(R.string.rules_of_the_road_63_A));
        QuestionAnswerEntry = new ArrayList<>();
        QuestionAnswerEntry.add(AnswerEntry);
        answers.add(QuestionAnswerEntry);
        QuestionEntry = new HashMap<String, String>();
        QuestionEntry.put(Log_Tag, getString(R.string.rules_of_the_road_64_Q));
        questions.add(QuestionEntry);
        AnswerEntry = new HashMap<String, String>();
        AnswerEntry.put(Log_Tag, getString(R.string.rules_of_the_road_64_A));
        QuestionAnswerEntry = new ArrayList<>();
        QuestionAnswerEntry.add(AnswerEntry);
        answers.add(QuestionAnswerEntry);
        QuestionEntry = new HashMap<String, String>();
        QuestionEntry.put(Log_Tag, getString(R.string.rules_of_the_road_65_Q));
        questions.add(QuestionEntry);
        AnswerEntry = new HashMap<String, String>();
        AnswerEntry.put(Log_Tag, getString(R.string.rules_of_the_road_65_A));
        QuestionAnswerEntry = new ArrayList<>();
        QuestionAnswerEntry.add(AnswerEntry);
        answers.add(QuestionAnswerEntry);

        question_keys = new String[] {Log_Tag};
        answer_keys = new String[] {Log_Tag};
        question_views = new int[]{R.id.activity_learn_signs_parentlist};
        answer_views = new int[]{R.id.activity_learn_signs_childlist};
    }

    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
        View rootView = (View) inflater.inflate(R.layout.learn_signs_rules_of_the_road, container, false);
        listOfRules = (ExpandableListView) rootView.findViewById(R.id.expandable_list_view_list);
        SimpleExpandableListAdapter rulesAdapter = new SimpleExpandableListAdapter (requireContext(), questions, R.layout.expandablelist_parent, question_keys, question_views, answers, R.layout.expandablelist_child, answer_keys, answer_views);
        listOfRules.setAdapter(rulesAdapter);
        return rootView;
    }
}